[user]
  name = Marina Cavalari
  email = marina.cavalari.mc@gmail.com
[color]
  branch = auto
  diff = auto
  interactive = auto
  status = auto

[apply]
  whitespace=fix
[color]
  ui = auto
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold
[color "status"]
  added = yellow
  changed = green
  untracked = cyan
[alias]
  ci = commit
  br = branch
  co = checkout
  df = diff -b
  lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%an, %cr)%Creset' --abbrev-commit --date=relative
  ph = push origin HEAD
  pheroku = push heroku HEAD

  last  = cat-file commit HEAD
  sta    = ls-files --exclude-per-directory=.gitignore \
    --exclude-from=.git/info/exclude \
    -t -o -u -s -m -d

  st = status

  cat   = -p cat-file -p
  fu    = fetch origin
  pum   = pull origin master
  fupum = !git co master && git fu && git pum
  upstream = !git fetch upstream && git merge upstream/master master && git ph -f
  rebasemaster = !branch=\"`git branch 2>/dev/null | grep \\* | awk '{ print $2 }'`\" && echo \"Rebasing $branch from master...\" && git fupum && git co $branch && git rebase master
  cob = !git fetch origin && git co -b $1 origin/$1 && echo \"Checked out origin branch:\"
  cod = "!git br -D $1 2> /dev/null; git cob $1"
  cia = !git ci --amend --no-edit

  top = !eval cd "$(pwd)/$(git rev-parse --show-cdup)" && pwd

  push-head = !git push origin `git symbolic-ref HEAD`
  publish = push publish
  pushall = !git remote | xargs -n1 git push
  pushalltags = !git remote | xargs -n1 git push --tags

  tblog = log --not-grep='Auto-increment of build number due to changes in directory '
  tbk   = !gitk --not-grep='Auto-increment of build number due to changes in directory '

  vgc = repack -f -a -d --depth=250 --window=250
  nvgc = !ionice -n7 nice -n20 git vgc

  findnext = rev-list --reverse -n1 HEAD..master
  checkoutnext = !git checkout `git findnext`

  edit-last-commit = !vim `git diff-tree -r --name-only HEAD HEAD~1`
  edit-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; vim `f`"
  add-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; git add `f`"

  ls = !git lg
[merge]
  tool = vimdiff
[core]
  excludesfile = ~/.gitignore_global
  editor = vim
[diff]
  tool = diffmerge
  merge = p4merge
[difftool "diffmerge"]
  cmd = diffmerge \"$LOCAL\" \"$REMOTE\"
[mergetool "diffmerge"]
  cmd = "diffmerge --merge --result=\"$MERGED\" \"$LOCAL\" \"$(if test -f \"$BASE\"; then echo \"$BASE\"; else echo \"$LOCAL\"; fi)\" \"$REMOTE\""
  trustExitCode = true
[mergetool "p4merge"]
  cmd = /Applications/p4merge.app/Contents/MacOS/p4merge "$BASE" "$LOCAL" "$REMOTE" "$MERGED"
  keepTemporaries = false
  trustExitCode = false
  keepBackup = false
[push]
    default = simple


[url "git@github.com:"]
  insteadOf = https://github.com/
[github]
  user = marinacavalari
[pull]
	rebase = false
[credential]
	helper = cache --timeout=36000